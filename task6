class Product:
    def __init__(self, name, price, quantity):
        self.name = name
        self.price = price
        self.quantity = quantity

class Marketplace:
    def __init__(self):
        self.products = []

    def add_product(self, name, price, quantity):
        self.products.append(Product(name, price, quantity))
        print("Product added successfully.")

    def display_products(self):
        if not self.products:
            print("No products available.")
            return
        print("Available Products:")
        for index, product in enumerate(self.products, start=1):
            print(f"{index}. {product.name} - ${product.price} ({product.quantity} available)")

    def purchase_product(self, index, quantity):
        product_index = index - 1
        if 0 <= product_index < len(self.products):
            product = self.products[product_index]
            if product.quantity >= quantity:
                product.quantity -= quantity
                print(f"{quantity} {product.name}(s) purchased successfully for ${product.price * quantity}.")
            else:
                print("Insufficient quantity.")
        else:
            print("Invalid product index.")

# Example usage
if __name__ == "__main__":
    marketplace = Marketplace()

    # Adding products
    marketplace.add_product("Laptop", 1000, 5)
    marketplace.add_product("Phone", 500, 10)

    # Displaying available products
    marketplace.display_products()

    # Purchasing a product
    marketplace.purchase_product(1, 2)

    # Displaying available products after purchase
    marketplace.display_products()
